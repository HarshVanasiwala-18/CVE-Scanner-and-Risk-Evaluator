import subprocess
import re
import socket
import argparse
import os
from risk_assessment import risk_assessment, cve_scan

ROOT_DIR = "scan_result"
SCAN_CVE_DIR = ROOT_DIR + "/cve_scan"


def create_dir():
    if not os.path.exists(ROOT_DIR):
        os.mkdir(ROOT_DIR)
    if not os.path.exists(SCAN_CVE_DIR):
        os.mkdir(SCAN_CVE_DIR)


def nmap_scan(scan_type, target, output_file):
    with open(ROOT_DIR + f"/{output_file}", "a") as f:
        scan_result = subprocess.run(
            f"nmap {scan_type} {target}", shell=True, capture_output=True, text=True
        )
        f.write("-" * 50)
        f.write(f"\nScanning {target} with {scan_type}\n")
        f.write(scan_result.stdout)


def main(targets):
    scan_type = [
        "-sV --script vuln",
        "-sS --script ssl-enum-ciphers",
        "--script=http-vul*",
        "--script ssl-enum-ciphers",
        "--script ssl-cert",
        "--script ssl-heartbleed",
        "-p 1-65535 -sV -sS -A --script vuln",
    ]

    i = 1
    for target in targets:
        j = 1
        for scan in scan_type:
            print(
                f"Scanning {target}. It will take some Time......", end="\r", flush=True
            )
            nmap_scan(scan, target, f"scan{i}_{j}.txt")
            j += 1
        i += 1


if __name__ == "__main__":
    create_dir()
    parser = argparse.ArgumentParser(description="Nmap Scan")
    parser.add_argument(
        "-t",
        "--targets",
        help="Target IP address or domain name (Only One)",
        nargs="+",
        required=True,
    )
    args = parser.parse_args()

    target_list = []
    ip_address_pattern = r"\b(?:\d{1,3}\.){3}\d{1,3}\b"

    for target in args.targets:
        if re.match(ip_address_pattern, target):
            target_list.append(target)
        else:
            try:
                if target.startswith("http"):
                    target = target.split("//")[1]
                    target_list.append(socket.gethostbyname(target))
                elif target.startswith("https"):
                    target = target.split("//")[1]
                    target_list.append(socket.gethostbyname(target))
                elif target.startswith("www"):
                    target = target.split("www.")[1]
                    target_list.append(socket.gethostbyname(target))
                else:
                    try:
                        target_list.append(socket.gethostbyname(target))
                    except Exception as e:
                        print(f"Error: {e}")
            except Exception as e:
                print(f"Error: {e}")

    main(target_list)
    cve_scan()
    risk_assessment()
